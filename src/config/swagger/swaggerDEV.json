{
  "swagger": "2.0",
  "info": {
    "description": "Backend ::ModbusConnection:: App",
    "version": "1.0.0",
    "title": "Swagger ModbusConnection",
    "contact": {
      "email": "santiagoandresdoti@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:5000",
  "basePath": "/v1/api",
  "tags": [
    {
      "name": "User",
      "description": "Everything about users"
    }
  ],
  "schemes": ["http", "https"],
  "paths": {
    "/user": {
      "get": {
        "tags": ["User"],
        "summary": "Finds all the users",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "pageNum",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "name": "pageSize",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": ["application/json"],
              "token": "token",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/modbus": {
      "get": {
        "tags": ["Modbus"],
        "summary": "Finds all the modbus data",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "pageNum",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "name": "pageSize",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": ["application/json"],
              "token": "token",
              "items": {
                "$ref": "#/definitions/Modbus"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/discreteinput": {
      "get": {
        "tags": ["DiscreteInput"],
        "summary": "Finds all the discrete input data",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "pageNum",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "name": "pageSize",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": ["application/json"],
              "token": "token",
              "items": {
                "$ref": "#/definitions/DisscreteInput"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/coils": {
      "get": {
        "tags": ["Coils"],
        "summary": "Finds all the coils data",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "pageNum",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "name": "pageSize",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": ["application/json"],
              "token": "token",
              "items": {
                "$ref": "#/definitions/Coils"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/inputregister": {
      "get": {
        "tags": ["InputRegister"],
        "summary": "Finds all the input register data",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "pageNum",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "name": "pageSize",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": ["application/json"],
              "token": "token",
              "items": {
                "$ref": "#/definitions/InputRegister"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/holdingregister": {
      "get": {
        "tags": ["HoldingRegister"],
        "summary": "Finds all the holding register data",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "pageNum",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "name": "pageSize",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": ["application/json"],
              "token": "token",
              "items": {
                "$ref": "#/definitions/HoldingRegister"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Find one user",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User Id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "patch": {
        "tags": ["User"],
        "summary": "Update one user",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete one user",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Modbus":{
      "type": "object",
      "properties":{
        "DiscreteInput":{
          "type": "object"
        },
        "Coils":{
          "type": "object"
        },
        "InputRegister":{
          "type": "object"
        },
        "HoldingRegister":{
          "type":"object"
        }
      }
    },
    "DiscreteInput":{
      "type": "object",
      "properties": {
        "address": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      }
    },
    "Coils":{
      "type": "object",
      "properties": {
        "address": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      }
    },
    "InputRegister":{
      "type": "object",
      "properties": {
        "address": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      }
    },
    "HoldingRegister":{
      "type": "object",
      "properties": {
        "address": {
          "type": "number"
        },
        "value": {
          "type": "number"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
